name: Continuous integration

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
  pull_request:

jobs:
  continuous-integration:
    # You can skip continuous integration by writing '[ci skip]' or '[skip ci]' in a commit message,
    # which is useful to preserve computing resources
    #
    # For example:
    #   > git commit -am "[skip ci] fixed x y z"
    if: contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    strategy:
      fail-fast: false
      matrix:
        ghc-version:
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.5"
          - "9.6.4"
          - "9.8.2"
          - "9.10.1"
        operating-system:
          - "ubuntu-latest"

    runs-on: ${{ matrix.operating-system }}

    steps:
    - uses: actions/checkout@v4

    - name: Install cabal/ghc
      uses: haskell-actions/setup@v2
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc-version }}
        cabal-version: '3.12.1.0'
    
    - name: Generate freeze file
      run: |
        cabal configure --enable-tests --test-show-details=direct
        cabal freeze --minimize-conflict-set
        cat cabal.project.freeze
    
    - name: Cache cabal work
      uses: actions/cache@v4
      with:
        path: |
          dist-newstyle
          ${{ steps.setup-haskell.outputs.cabal-store }}
        # We are using the hash of 'cabal.project.local' so that different levels
        # of optimizations are cached separately
        key: ${{ runner.os }}-${{ hashFiles('cabal.project', 'cabal.project.local') }}-cabal-install

    - name: Build dependencies only
      run: cabal build all --only-dependencies
    
    - name: Build all packages
      run: cabal build all
        
    - name: Run all tests
      run: cabal test all